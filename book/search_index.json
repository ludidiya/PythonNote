[
["PythonExcelWorld.html", "Chapter 6 文件操作Excel/World 6.1 OpenPyXL简介 6.2 创建工作簿和表workbook方法 6.3 读取文件和表达内容load_workbook()方法 6.4 OpenPyXL案例", " Chapter 6 文件操作Excel/World 本章主要讲解如何使用模块os在python中操作文件； 使用第三方模块openpyxl模块，实现Excel文件的操作； 使用第三方模块 6.1 OpenPyXL简介 OpenPyXL是一个Python库，用来读写Excel2010 xlsx/xlsm/xltx/xltm类型文件的。 安装代码如下： pip install openpyxl 6.1.1 常用属性和方法 6.2 创建工作簿和表workbook方法 openpyxl中的workbook方法可以根据路径创建一个新的Excel文件 导入模块的两种方法： import openpyxl from openpyxl import workbook 6.2.1 Excel文件创建和保存 # 1. 创建空白工作薄并保存 wb = workbook() wb.save(&#39;./datafile/work1.xlsx) 6.2.2 默认激活sheet # 创建空白工作簿并保存 wb = workbook() # 获得默认激活的worksheet的名字 ws = wb.active print(ws) # &lt;Worksheet &quot;Sheet&quot;&gt; # 修改默认表的名字 ws.title = &#39;激活&#39; print(ws) # &lt;Worksheet &quot;激活&quot;&gt; # 保存文件 wb.save(&#39;./datafile/work1.xlsx&#39;) 6.2.3 worksheet的顺序 wb = workbook() # 默认有一个表 ws1 = wb.create_sheet(&#39;ws1&#39;,1) # 放在第二位 ws2 = wb.create_sheet(&#39;ws2&#39;,0) # 放在第三位 ws3 = wb.create_sheet(&#39;ws3&#39;) # 默认在最后追加一个worksheet wb.save(&#39;./datafile/work2.xlsx&#39;) # 现在worksheet的顺序应该是ws2, Sheet, ws1, ws3 print(wb.sheetnames) # [&#39;ws2&#39;, &#39;Sheet&#39;, &#39;ws1&#39;, &#39;ws3&#39;] ws = wb.active print(ws) # 结果是‘ws’，所以wb.active获取的是第一位置上worksheet的名字 6.2.4 练习(创建100张表) 创建一个工作簿，然后创建100张工作表。 wb = workbook() # 删除默认激活的那张表 sheet = wb.active wb.remove(sheet) # 循环创建100张表 for i in range(1,101): wb.create_sheet(f&#39;第{i}张表&#39;) wb.save(&#39;./datafile/test1.xlsx&#39;) 6.3 读取文件和表达内容load_workbook()方法 可以根据openpyxl的laod_workbook()方法读取本地文件。 from openpyxl import load_workbook 6.3.1 worksheet信息及修改 wb = load_workbook(&#39;./datafile/work2.xlsx&#39;) print(wb.sheetnames) # [&#39;ws2&#39;, &#39;Sheet&#39;, &#39;ws1&#39;, &#39;ws3&#39;] # 根据表名获取表 sheet = wb[&#39;ws3&#39;] sheet.title = &quot;表3&quot; print(wb.sheetnames) # [&#39;ws2&#39;, &#39;Sheet&#39;, &#39;ws1&#39;, &#39;表3&#39;] # 在设置属性（如修改表名）后记得保存，不然Excel文件内并不会更改 wb.save(&#39;./datafile/work2.xlsx&#39;) 6.3.2 读取表中数据 from openpyxl import load_workbook wb = load_workbook(&#39;./datafile/读写.xlsx&#39;) # 查看有哪些worksheet print(wb.sheetnames) # [&#39;读&#39;, &#39;写&#39;] # 获取对应的表 sheet = wb[&#39;读&#39;] # 获取行列数 print(sheet.max_row,&quot;行&quot;) # 7 行 print(sheet.max_column,&quot;列&quot;) # 2 列 # 读取一列 one_column = sheet[&#39;A&#39;] print(one_column) # (&lt;Cell &#39;读&#39;.A1&gt;, &lt;Cell &#39;读&#39;.A2&gt;, &lt;Cell &#39;读&#39;.A3&gt;, &lt;Cell &#39;读&#39;.A4&gt;, &lt;Cell &#39;读&#39;.A5&gt;, &lt;Cell &#39;读&#39;.A6&gt;, &lt;Cell &#39;读&#39;.A7&gt;) # 读取一行 one_row = sheet[&#39;1&#39;] print(one_row) # (&lt;Cell &#39;读&#39;.A1&gt;, &lt;Cell &#39;读&#39;.B1&gt;) # 读取一个单元格 one_cell = sheet[&#39;A1&#39;] print(one_cell) # &lt;Cell &#39;读&#39;.A1&gt; print(one_cell.value) # 获取单元格的值: 1 # 使用数字这种形式获取值 print(sheet.cell(row=1,column=1).value) # 1 6.3.3 写入数据 写入数据的基本代码：sheet['A1'].value = 'A1' from openpyxl import load_workbook wb = load_workbook(&#39;./datafile/读写.xlsx&#39;) sheet = wb[&#39;写&#39;] # sheet[&#39;A1&#39;].value = &#39;A1&#39; #写入一列 for i in range(1,11): sheet[f&#39;A{i}&#39;].value = i # 写入一行 for j in range(1,11): sheet.cell(row=11,column=j,value=j) wb.save(&#39;./datafile/读写.xlsx&#39;) 6.4 OpenPyXL案例 6.4.1 添加列数据 6.4.2 绘制图形 6.4.3 添加图片 6.4.4 修改单元格样式 "]
]
